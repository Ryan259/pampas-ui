<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.pampas.ui.mapper.GatewaySpiCustomMapper">
    <resultMap id="BaseResultMap" type="com.github.pampas.storage.entity.GatewaySpi">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="gateway_group" jdbcType="VARCHAR" property="gatewayGroup"/>
        <result column="gateway_instance_id" jdbcType="VARCHAR" property="gatewayInstanceId"/>
        <result column="spi_interface" jdbcType="VARCHAR" property="spiInterface"/>
        <result column="spi_interface_desc" jdbcType="VARCHAR" property="spiInterfaceDesc"/>
        <result column="spi_class" jdbcType="VARCHAR" property="spiClass"/>
        <result column="spi_name" jdbcType="VARCHAR" property="spiName"/>
        <result column="spi_desc" jdbcType="VARCHAR" property="spiDesc"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_del" jdbcType="BIT" property="isDel"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, gateway_group, gateway_instance_id, spi_interface, spi_interface_desc, spi_class,
    spi_name, spi_desc, `status`, remark, insert_time, update_time, is_del
  </sql>

    <select id="selectSpiClassList" parameterType="map"
            resultMap="BaseResultMap">
        select * from p_gateway_spi t
        <where>
            <if test="spi_interface != null ">spi_interface=#{spi_interface}</if>
            <if test="gateway_group != null ">gateway_group=#{gateway_group}</if>
            <if test="gateway_instance_id != null ">gateway_instance_id=#{gateway_instance_id}</if>
        </where>
        group by t.spi_name
    </select>
</mapper>